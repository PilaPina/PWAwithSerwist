import { z } from 'zod';
import { b as basePartial, g as globPartial, r as requiredGlobDirectoryPartial } from './glob.js';

const optionalSwDestPartial = z.object({
    swDest: z.string().optional()
}).strict("Do not pass invalid properties to OptionalSwDest!");
const requiredSwDestPartial = z.object({
    swDest: z.string()
}).strict("Do not pass invalid properties to RequiredSwDest!");

const baseInjectPartial = z.object({
    injectionPoint: z.string().default("self.__SW_MANIFEST"),
    swSrc: z.string()
}).strict("Do not pass invalid properties to InjectPartial!");
const injectManifestOptions = basePartial.merge(globPartial).merge(baseInjectPartial).merge(requiredSwDestPartial).merge(requiredGlobDirectoryPartial).strict("Do not pass invalid properties to InjectManifestOptions!");

var injectManifest = /*#__PURE__*/Object.freeze({
  __proto__: null,
  baseInjectPartial: baseInjectPartial,
  injectManifestOptions: injectManifestOptions
});

export { injectManifest as a, baseInjectPartial as b, injectManifestOptions as i, optionalSwDestPartial as o, requiredSwDestPartial as r };
