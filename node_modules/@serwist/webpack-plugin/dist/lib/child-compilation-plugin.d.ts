import type { Compiler, WebpackPluginInstance, default as Webpack } from "webpack";
export interface ChildCompilationPluginOptions {
    src: string;
    dest: string;
    plugins?: WebpackPluginInstance[];
}
/**
 * Compile a file by creating a child of the hooked compiler.
 *
 * @private
 */
export declare class ChildCompilationPlugin implements WebpackPluginInstance {
    src: string;
    dest: string;
    plugins: WebpackPluginInstance[] | undefined;
    webpack: typeof Webpack;
    constructor({ src, dest, plugins }: ChildCompilationPluginOptions);
    /**
     * @param compiler default compiler object passed from webpack
     *
     * @private
     */
    private propagateWebpackConfig;
    /**
     * @param compiler default compiler object passed from webpack
     *
     * @private
     */
    apply(compiler: Compiler): void;
    /**
     * @param compilation The webpack compilation.
     * @param parentCompiler The webpack parent compiler.
     *
     * @private
     */
    private performChildCompilation;
}
//# sourceMappingURL=child-compilation-plugin.d.ts.map