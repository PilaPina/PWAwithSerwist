import { basePartial, injectPartial as injectPartial$1, optionalSwDestPartial } from '@serwist/build/schema';
import { z } from 'zod';

const webpackPartial = z.object({
    chunks: z.array(z.string()).optional(),
    exclude: z.array(z.union([
        z.string(),
        z.instanceof(RegExp),
        z.function(z.tuple([
            z.any()
        ]), z.boolean())
    ])).default([
        /\.map$/,
        /^manifest.*\.js$/
    ]),
    excludeChunks: z.array(z.string()).optional(),
    include: z.array(z.union([
        z.string(),
        z.instanceof(RegExp),
        z.function(z.tuple([
            z.any()
        ]), z.boolean())
    ])).optional()
}).strict("Do not pass invalid properties to WebpackPartial!");
const injectPartial = z.object({
    compileSrc: z.boolean().default(true),
    swDest: z.string().optional(),
    webpackCompilationPlugins: z.array(z.any()).optional()
}).strict("Do not pass invalid properties to WebpackInjectManifestPartial!");
const injectManifestOptions = basePartial.merge(webpackPartial).merge(injectPartial$1).merge(optionalSwDestPartial).merge(injectPartial).strict("Do not pass invalid properties to WebpackInjectManifestOptions!");

export { injectManifestOptions, injectPartial, webpackPartial };
