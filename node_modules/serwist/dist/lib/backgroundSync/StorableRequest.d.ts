import type { MapLikeObject } from "../../types.js";
export interface RequestData extends MapLikeObject {
    url: string;
    headers: MapLikeObject;
    body?: ArrayBuffer;
}
/**
 * A class to make it easier to serialize and de-serialize requests so they
 * can be stored in IndexedDB.
 *
 * Most developers will not need to access this class directly;
 * it is exposed for advanced use cases.
 */
export declare class StorableRequest {
    private readonly _requestData;
    /**
     * Converts a Request object to a plain object that can be structured
     * cloned or stringified to JSON.
     *
     * @param request
     * @returns
     */
    static fromRequest(request: Request): Promise<StorableRequest>;
    /**
     * Accepts an object of request data that can be used to construct a
     * `Request` but can also be stored in IndexedDB.
     *
     * @param requestData An object of request data that includes the `url` plus any relevant property of
     * [`requestInit`](https://fetch.spec.whatwg.org/#requestinit).
     */
    constructor(requestData: RequestData);
    /**
     * Returns a deep clone of the instance's `requestData` object.
     *
     * @returns
     */
    toObject(): RequestData;
    /**
     * Converts this instance to a Request.
     *
     * @returns
     */
    toRequest(): Request;
    /**
     * Creates and returns a deep clone of the instance.
     *
     * @returns
     */
    clone(): StorableRequest;
}
//# sourceMappingURL=StorableRequest.d.ts.map