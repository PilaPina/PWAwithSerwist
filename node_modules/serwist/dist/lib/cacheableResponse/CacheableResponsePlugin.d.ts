import type { SerwistPlugin } from "../../types.js";
import type { CacheableResponseOptions } from "./CacheableResponse.js";
/**
 * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it
 * easier to add in cacheability checks to requests made via Serwist's built-in
 * strategies.
 */
export declare class CacheableResponsePlugin implements SerwistPlugin {
    private readonly _cacheableResponse;
    /**
     * To construct a new CacheableResponsePlugin instance you must provide at
     * least one of the `config` properties.
     *
     * If both `statuses` and `headers` are specified, then both conditions must
     * be met for the `Response` to be considered cacheable.
     *
     * @param config
     */
    constructor(config: CacheableResponseOptions);
    /**
     * @param options
     * @returns
     * @private
     */
    cacheWillUpdate: SerwistPlugin["cacheWillUpdate"];
}
//# sourceMappingURL=CacheableResponsePlugin.d.ts.map